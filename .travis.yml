language: cpp
os:
  - linux
  - osx
compiler:
  - clang
notifications:
  email: false
env: 
  matrix:
    - JULIAVERSION="releases"
    - JULIAVERSION="nightlies" CODECOVERAGE=1
before_install:
  - if [ `uname` = "Linux" ]; then
      sudo add-apt-repository ppa:staticfloat/julia-deps -y;
      sudo add-apt-repository ppa:staticfloat/julia${JULIAVERSION} -y;
      sudo apt-get update -qq -y;
      sudo apt-get install -qq fglrx opencl-headers;
      sudo apt-get install libpcre3-dev julia -y;
    elif [ `uname` = "Darwin" ]; then
      if [ "$JULIAVERSION" = "nightlies" ]; then
        wget -O julia.dmg "http://status.julialang.org/download/osx10.7+";
      else
        wget -O julia.dmg "http://status.julialang.org/stable/osx10.7+";
      fi;
      hdiutil mount julia.dmg;
      cp -Ra /Volumes/Julia/*.app/Contents/Resources/julia ~;
      export PATH="$PATH:$(echo ~)/julia/bin";
    fi
  - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
script:
  - julia -e 'Pkg.init(); Pkg.clone(pwd())'
  - julia -e 'using OpenCL; @assert isdefined(:OpenCL); @assert typeof(OpenCL) === Module'

  - julia -e 'Pkg.add("FactCheck");'

  - if [ $JULIAVERSION = "nightlies" ]; then julia test/runtests.jl; fi
  - if [ $JULIAVERSION = "releases" ]; then julia test/runtests.jl; fi

  - julia examples/demo.jl
  - julia examples/performance.jl
  - julia examples/hands_on_opencl/ex04/vadd_chain.jl
  - julia examples/hands_on_opencl/ex05/vadd_abc.jl
  - julia examples/hands_on_opencl/ex06/matmul.jl
  - julia examples/hands_on_opencl/ex07/matmul.jl
  - julia examples/hands_on_opencl/ex08/matmul.jl
  - julia examples/hands_on_opencl/ex09/pi_ocl.jl
  - julia examples/hands_on_opencl/exA/pi_vocl.jl 1  
  - julia examples/hands_on_opencl/exA/pi_vocl.jl 4  
  - julia examples/hands_on_opencl/exA/pi_vocl.jl 8 
after_success:
  - if [[ $CODECOVERAGE ]]; then julia -e 'Pkg.add("Coverage"); using Coverage; Coveralls.submit(Coveralls.process_folder())'; fi
